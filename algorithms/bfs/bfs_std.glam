# Let G be an adjacency matrix and s the starting vertex.
# The frontier for the next timestep is all nodes (i)
# such that there exists an edge (i -> j) and j has not
# been visited. We updated the visited matrix and append 
# to the result array which represents the bfs order in 
# which nodes are visited. We stop when the frontier is empty.

visited = zeros(Int, G.num_nodes()); 
result = [];

Iterate(frontier)
    Start-With
        i = s; 
        frontier = zeros(Int, G.num_nodes()); 
    end

    Process
        frontier{t+1}[j] = !visited[j] * (frontier{t}[i] * G[i,j])
        visited[i] = 1
        result[] += i
    end
    
    Stop-When f[] = 0;

# -------
# INFERENCES
#
# This is a case of an iterative algorithm that needs to loop over
# nodes in the graph.