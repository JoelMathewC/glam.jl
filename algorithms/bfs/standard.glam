# Let G be an adjacency matrix and s the starting vertex.
# The frontier for the next timestep is all nodes (i)
# such that there exists an edge (j -> i) and i has not
# been visited. We updated the visited matrix and append 
# to the result array which represents the bfs order in 
# which nodes are visited. We stop when the frontier is empty.
Iterate(frontier)
    Start-With {
        i = s; 
        frontier{0} = zeros(Int, G.num_nodes()); 
        visited = zeros(Int, G.num_nodes()); 
        result = [];
    }

    Process {
        frontier{t+1}[i] = !visited[i] * (frontier{t}[j] * G[j,i])
        visited[j] = 1
        result[] += i
    }
    
    Stop-When f[] = 0;